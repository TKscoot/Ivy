# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  RESCOMP = windres
  TARGETDIR = Lib
  TARGET = $(TARGETDIR)/libImGui.a
  OBJDIR = Lib/Debug
  DEFINES +=
  INCLUDES += -I. -I../GLFW/Include -I../GLAD/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../GLAD/Lib/libGLAD.a -lglfw
  LDDEPS += ../GLAD/Lib/libGLAD.a
  ALL_LDFLAGS += $(LDFLAGS) -L../GLFW/Lib -L../GLAD/Lib -L/usr/lib64 -m64
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  RESCOMP = windres
  TARGETDIR = Lib
  TARGET = $(TARGETDIR)/libImGui.a
  OBJDIR = Lib/Release
  DEFINES +=
  INCLUDES += -I. -I../GLFW/Include -I../GLAD/include
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../GLAD/Lib/libGLAD.a -lglfw
  LDDEPS += ../GLAD/Lib/libGLAD.a
  ALL_LDFLAGS += $(LDFLAGS) -L../GLFW/Lib -L../GLAD/Lib -L/usr/lib64 -m64 -s
  LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/imgui_impl_glfw.o \
	$(OBJDIR)/imgui_impl_opengl3.o \
	$(OBJDIR)/imgui.o \
	$(OBJDIR)/imgui_demo.o \
	$(OBJDIR)/imgui_draw.o \
	$(OBJDIR)/imgui_tables.o \
	$(OBJDIR)/imgui_widgets.o \
	$(OBJDIR)/imgui_stdlib.o \
	$(OBJDIR)/binary_to_compressed_c.o \

RESOURCES := \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking ImGui
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning ImGui
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/binary_to_compressed_c.o: Lib/Debug/binary_to_compressed_c.d
	@echo $(notdir $<)
	$(SILENT) $(DC) $(ALL_DFLAGS) $(OUTPUTFLAG) -c $<
$(OBJDIR)/imgui.o: Lib/Debug/imgui.d
	@echo $(notdir $<)
	$(SILENT) $(DC) $(ALL_DFLAGS) $(OUTPUTFLAG) -c $<
$(OBJDIR)/imgui_demo.o: Lib/Debug/imgui_demo.d
	@echo $(notdir $<)
	$(SILENT) $(DC) $(ALL_DFLAGS) $(OUTPUTFLAG) -c $<
$(OBJDIR)/imgui_draw.o: Lib/Debug/imgui_draw.d
	@echo $(notdir $<)
	$(SILENT) $(DC) $(ALL_DFLAGS) $(OUTPUTFLAG) -c $<
$(OBJDIR)/imgui_impl_glfw.o: Lib/Debug/imgui_impl_glfw.d
	@echo $(notdir $<)
	$(SILENT) $(DC) $(ALL_DFLAGS) $(OUTPUTFLAG) -c $<
$(OBJDIR)/imgui_impl_opengl3.o: Lib/Debug/imgui_impl_opengl3.d
	@echo $(notdir $<)
	$(SILENT) $(DC) $(ALL_DFLAGS) $(OUTPUTFLAG) -c $<
$(OBJDIR)/imgui_stdlib.o: Lib/Debug/imgui_stdlib.d
	@echo $(notdir $<)
	$(SILENT) $(DC) $(ALL_DFLAGS) $(OUTPUTFLAG) -c $<
$(OBJDIR)/imgui_tables.o: Lib/Debug/imgui_tables.d
	@echo $(notdir $<)
	$(SILENT) $(DC) $(ALL_DFLAGS) $(OUTPUTFLAG) -c $<
$(OBJDIR)/imgui_widgets.o: Lib/Debug/imgui_widgets.d
	@echo $(notdir $<)
	$(SILENT) $(DC) $(ALL_DFLAGS) $(OUTPUTFLAG) -c $<
$(OBJDIR)/imgui_impl_glfw.o: backends/imgui_impl_glfw.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_impl_opengl3.o: backends/imgui_impl_opengl3.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui.o: imgui.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_demo.o: imgui_demo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_draw.o: imgui_draw.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_tables.o: imgui_tables.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_widgets.o: imgui_widgets.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/imgui_stdlib.o: misc/cpp/imgui_stdlib.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/binary_to_compressed_c.o: misc/fonts/binary_to_compressed_c.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif